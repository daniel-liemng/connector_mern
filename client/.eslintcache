[{"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\index.js":"1","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\App.js":"2","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\theme.js":"3","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\layout\\Navbar.js":"4","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Home.js":"5","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Login.js":"6","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Register.js":"7","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\Loading.js":"8","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\Message.js":"9","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\context\\userContext.js":"10","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\actionTypes.js":"11","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\reducers\\userReducer.js":"12","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\utils\\setAuthToken.js":"13","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Dashboard.js":"14","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\utils\\AuthRoute.js":"15","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\context\\profileContext.js":"16","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\reducers\\profileReducer.js":"17","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\CreateProfile.js":"18","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\EditProfile.js":"19","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\AddEducation.js":"20","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\AddExperience.js":"21","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\dashboard\\DashboardActions.js":"22","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\dashboard\\Experience.js":"23","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\dashboard\\Education.js":"24"},{"size":701,"mtime":1609990422460,"results":"25","hashOfConfig":"26"},{"size":1485,"mtime":1610162022660,"results":"27","hashOfConfig":"26"},{"size":421,"mtime":1609821695182,"results":"28","hashOfConfig":"26"},{"size":4292,"mtime":1610162434121,"results":"29","hashOfConfig":"26"},{"size":378,"mtime":1609815679109,"results":"30","hashOfConfig":"26"},{"size":4389,"mtime":1609813123011,"results":"31","hashOfConfig":"26"},{"size":5407,"mtime":1609808989955,"results":"32","hashOfConfig":"26"},{"size":506,"mtime":1609816465272,"results":"33","hashOfConfig":"26"},{"size":364,"mtime":1609534464791,"results":"34","hashOfConfig":"26"},{"size":4244,"mtime":1610162403030,"results":"35","hashOfConfig":"26"},{"size":936,"mtime":1610090406321,"results":"36","hashOfConfig":"26"},{"size":2461,"mtime":1610090694587,"results":"37","hashOfConfig":"26"},{"size":346,"mtime":1609739838201,"results":"38","hashOfConfig":"26"},{"size":3296,"mtime":1610162054358,"results":"39","hashOfConfig":"26"},{"size":453,"mtime":1609812988249,"results":"40","hashOfConfig":"26"},{"size":7024,"mtime":1610087280357,"results":"41","hashOfConfig":"26"},{"size":1014,"mtime":1610057894364,"results":"42","hashOfConfig":"26"},{"size":9916,"mtime":1609989959254,"results":"43","hashOfConfig":"26"},{"size":11220,"mtime":1610075377779,"results":"44","hashOfConfig":"26"},{"size":7147,"mtime":1610040203065,"results":"45","hashOfConfig":"26"},{"size":7078,"mtime":1610058767236,"results":"46","hashOfConfig":"26"},{"size":2053,"mtime":1610088147786,"results":"47","hashOfConfig":"26"},{"size":3832,"mtime":1610041420474,"results":"48","hashOfConfig":"26"},{"size":3975,"mtime":1610041602994,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"ipi2oe",{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\index.js",[],["102","103"],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\App.js",["104","105"],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\theme.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\layout\\Navbar.js",["106"],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Home.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Login.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Register.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\Loading.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\Message.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\context\\userContext.js",["107"],"import React, { createContext, useContext, useReducer, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport reducer from \"../reducers/userReducer\";\r\n\r\nimport {\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_ERROR,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_ERROR,\r\n  SET_ALERT,\r\n  REMOVE_ALERT,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGOUT,\r\n} from \"../actionTypes\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\nconst UserContext = createContext();\r\n\r\nconst getTokenFromLocalStorage = () =>\r\n  localStorage.getItem(\"connector_token\")\r\n    ? JSON.parse(localStorage.getItem(\"connector_token\"))\r\n    : null;\r\n\r\nconst initialState = {\r\n  token: getTokenFromLocalStorage(),\r\n  isAuthenticated: null,\r\n  user: null,\r\n  user_loading: true,\r\n  user_login_loading: false,\r\n  user_login_error: null,\r\n  user_register_loading: false,\r\n  user_register_error: null,\r\n  errors: [],\r\n};\r\n\r\nconst UserProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  //// Load userInfo every single time the main component loads\r\n  const loadUser = async () => {\r\n    const token = JSON.parse(localStorage.getItem(\"connector_token\"));\r\n\r\n    // Set Authorization Headers for axios\r\n    if (token) {\r\n      setAuthToken(token);\r\n    }\r\n\r\n    try {\r\n      const { data } = await axios.get(\"/api/auth\");\r\n\r\n      dispatch({ type: USER_LOADED, payload: data });\r\n    } catch (err) {\r\n      dispatch({ type: AUTH_ERROR });\r\n    }\r\n  };\r\n\r\n  //// Register\r\n  const registerUser = async (name, email, password) => {\r\n    // loading\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/users\",\r\n        { name, email, password },\r\n        config\r\n      );\r\n\r\n      dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n\r\n      // Load User\r\n      loadUser();\r\n    } catch (err) {\r\n      console.log(\"1122\", err.response.data);\r\n\r\n      // Show error validation from backend\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => {\r\n          dispatch({ type: SET_ALERT, payload: error });\r\n        });\r\n      }\r\n\r\n      dispatch({\r\n        type: USER_REGISTER_ERROR,\r\n        payload:\r\n          err.response && err.response.data.errors\r\n            ? err.response.data.errors\r\n            : err.response,\r\n      });\r\n    }\r\n  };\r\n\r\n  //// Login\r\n  const loginUser = async (email, password) => {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/auth\",\r\n        { email, password },\r\n        config\r\n      );\r\n\r\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n      // Load User\r\n      loadUser();\r\n    } catch (err) {\r\n      console.log(err.response.data);\r\n      // Show error validation from backend\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => {\r\n          dispatch({ type: SET_ALERT, payload: error });\r\n        });\r\n      }\r\n\r\n      dispatch({\r\n        type: USER_LOGIN_ERROR,\r\n        payload:\r\n          err.response && err.response.data.errors\r\n            ? err.response.data.errors\r\n            : err.response,\r\n      });\r\n    }\r\n  };\r\n\r\n  //// Logout\r\n  const logout = (history) => {\r\n    // dispatch({ type: PROFILE_CLEAR });\r\n    console.log(\"aaaa11\", state.token);\r\n\r\n    dispatch({ type: LOGOUT });\r\n\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const setAlert = (msg, type) => {\r\n    dispatch({ type: SET_ALERT, payload: { msg, type } });\r\n  };\r\n\r\n  const removeAlert = () => {\r\n    dispatch({ type: REMOVE_ALERT });\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        ...state,\r\n        registerUser,\r\n        loginUser,\r\n        setAlert,\r\n        removeAlert,\r\n        loadUser,\r\n        logout,\r\n      }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nconst useUserContext = () => {\r\n  return useContext(UserContext);\r\n};\r\n\r\nexport { UserProvider, useUserContext };\r\n","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\actionTypes.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\reducers\\userReducer.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\utils\\setAuthToken.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Dashboard.js",["108"],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\utils\\AuthRoute.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\context\\profileContext.js",["109","110"],"import React, { createContext, useContext, useReducer, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport reducer from \"../reducers/profileReducer\";\r\n\r\nimport {\r\n  PROFILE_GET,\r\n  PROFILE_UPDATE,\r\n  PROFILE_ERROR,\r\n  PROFILE_CLEAR,\r\n  ACCOUNT_DELETED,\r\n  SET_ALERT,\r\n  REMOVE_ALERT,\r\n} from \"../actionTypes\";\r\n\r\nconst ProfileContext = createContext();\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {},\r\n  errors: [],\r\n};\r\n\r\nconst ProfileProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  //// Get current users profile\r\n  const getCurrentProfile = async () => {\r\n    try {\r\n      const { data } = await axios.get(\"/api/profile/me\");\r\n\r\n      console.log(\"data\", data);\r\n      dispatch({ type: PROFILE_GET, payload: data });\r\n    } catch (err) {\r\n      console.log(\"err\", err);\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n\r\n  //// Create or update profile\r\n  const createProfile = async (formData, history, edit = false) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/profile\", formData, config);\r\n\r\n      dispatch({ type: PROFILE_GET, payload: data });\r\n\r\n      if (edit) {\r\n        dispatch({\r\n          type: SET_ALERT,\r\n          payload: { msg: \"Profile Updated\", type: \"success\" },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT,\r\n          payload: { msg: \"Profile Created\", type: \"success\" },\r\n        });\r\n      }\r\n\r\n      // Redirect if creating, stay if updating\r\n      if (!edit) {\r\n        setTimeout(() => {\r\n          history.push(\"/dashboard\");\r\n        }, 3000);\r\n      }\r\n    } catch (err) {\r\n      console.log(err.response.data);\r\n      // Show error validation from backend\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => {\r\n          dispatch({ type: SET_ALERT, payload: error });\r\n        });\r\n      }\r\n\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n\r\n  //// Add Experience\r\n  const addExperience = async (formData, history) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        \"/api/profile/experience\",\r\n        formData,\r\n        config\r\n      );\r\n\r\n      dispatch({ type: PROFILE_UPDATE, payload: data });\r\n\r\n      dispatch({\r\n        type: SET_ALERT,\r\n        payload: { msg: \"Experience Added\", type: \"success\" },\r\n      });\r\n\r\n      // Redirect\r\n      setTimeout(() => {\r\n        history.push(\"/dashboard\");\r\n      }, 6000);\r\n    } catch (err) {\r\n      console.log(err.response.data);\r\n      // Show error validation from backend\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => {\r\n          dispatch({ type: SET_ALERT, payload: error });\r\n        });\r\n      }\r\n\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n\r\n  //// Add Education\r\n  const addEducation = async (formData, history) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        \"/api/profile/education\",\r\n        formData,\r\n        config\r\n      );\r\n\r\n      dispatch({ type: PROFILE_UPDATE, payload: data });\r\n\r\n      dispatch({\r\n        type: SET_ALERT,\r\n        payload: { msg: \"Education Added\", type: \"success\" },\r\n      });\r\n\r\n      // Redirect\r\n      setTimeout(() => {\r\n        history.push(\"/dashboard\");\r\n      }, 4000);\r\n    } catch (err) {\r\n      console.log(err.response.data);\r\n      // Show error validation from backend\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => {\r\n          dispatch({ type: SET_ALERT, payload: error });\r\n        });\r\n      }\r\n\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n\r\n  //// Delete Experience\r\n  const deleteExperience = async (expId) => {\r\n    try {\r\n      const { data } = await axios.delete(`/api/profile/experience/${expId}`);\r\n\r\n      dispatch({ type: PROFILE_UPDATE, payload: data });\r\n\r\n      dispatch({\r\n        type: SET_ALERT,\r\n        payload: { msg: \"Experience Removed\", type: \"success\" },\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n\r\n  //// Delete Education\r\n  const deleteEducation = async (eduId) => {\r\n    try {\r\n      const { data } = await axios.delete(`/api/profile/education/${eduId}`);\r\n\r\n      dispatch({ type: PROFILE_UPDATE, payload: data });\r\n\r\n      dispatch({\r\n        type: SET_ALERT,\r\n        payload: { msg: \"Education Removed\", type: \"success\" },\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n\r\n  //// Delete Account and Profile\r\n  const deleteAccount = async (history) => {\r\n    if (window.confirm(\"Are you sure? This can not be undone\")) {\r\n      try {\r\n        const { data } = await axios.delete(\"/api/profile\");\r\n\r\n        dispatch({ type: PROFILE_CLEAR });\r\n\r\n        dispatch({ type: ACCOUNT_DELETED });\r\n\r\n        dispatch({\r\n          type: SET_ALERT,\r\n          payload: {\r\n            msg: \"Your account has been permanently deleted\",\r\n            type: \"error\",\r\n          },\r\n        });\r\n\r\n        // Redirect\r\n        setTimeout(() => {\r\n          history.push(\"/dashboard\");\r\n        }, 5000);\r\n      } catch (err) {\r\n        dispatch({\r\n          type: PROFILE_ERROR,\r\n          payload: {\r\n            msg: err.response.statusText,\r\n            status: err.response.status,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeAlert = () => {\r\n    console.log(\"removed\");\r\n    dispatch({ type: REMOVE_ALERT });\r\n  };\r\n\r\n  const clearProfile = () => {\r\n    dispatch({ type: PROFILE_CLEAR });\r\n  };\r\n\r\n  return (\r\n    <ProfileContext.Provider\r\n      value={{\r\n        ...state,\r\n        getCurrentProfile,\r\n        createProfile,\r\n        removeAlert,\r\n        clearProfile,\r\n        addExperience,\r\n        addEducation,\r\n        deleteExperience,\r\n        deleteEducation,\r\n        deleteAccount,\r\n      }}\r\n    >\r\n      {children}\r\n    </ProfileContext.Provider>\r\n  );\r\n};\r\n\r\nconst useProfileContext = () => {\r\n  return useContext(ProfileContext);\r\n};\r\n\r\nexport { ProfileProvider, useProfileContext };\r\n","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\reducers\\profileReducer.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\CreateProfile.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\EditProfile.js",["111"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  Button,\r\n  Typography,\r\n  InputAdornment,\r\n  MenuItem,\r\n  Collapse,\r\n} from \"@material-ui/core\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\n\r\nimport { useProfileContext } from \"../context/profileContext\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: \"3rem\",\r\n    padding: \"1rem\",\r\n  },\r\n  title: {\r\n    marginTop: \"1rem\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  submitBtn: {\r\n    marginTop: \"1.5rem\",\r\n    marginBottom: \"2rem\",\r\n    marginRight: \"0.5rem\",\r\n  },\r\n  buttonGroup: {\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\nconst EditProfile = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const {\r\n    profile,\r\n    loading,\r\n    createProfile,\r\n    getCurrentProfile,\r\n    errors,\r\n    removeAlert,\r\n  } = useProfileContext();\r\n\r\n  const [socialToggle, setSocialToggle] = useState(false);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    website: \"\",\r\n    location: \"\",\r\n    status: \"\",\r\n    skills: \"\",\r\n    githubusername: \"\",\r\n    bio: \"\",\r\n    twitter: \"\",\r\n    facebook: \"\",\r\n    linkedin: \"\",\r\n    youtube: \"\",\r\n    instagram: \"\",\r\n  });\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  // Get current profile to fill the form\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    // Set the form with input\r\n    // To avoid the undefined data of the <input> with no data filled -> value={name || ''}\r\n    setFormData({\r\n      company: loading || !profile.company ? \"\" : profile.company,\r\n      website: loading || !profile.website ? \"\" : profile.website,\r\n      location: loading || !profile.location ? \"\" : profile.location,\r\n      status: loading || !profile.status ? \"\" : profile.status,\r\n      skills: loading || !profile.skills ? \"\" : profile.skills.join(\",\"),\r\n      githubusername:\r\n        loading || !profile.githubusername ? \"\" : profile.githubusername,\r\n      bio: loading || !profile.bio ? \"\" : profile.bio,\r\n      twitter: loading || !profile.social ? \"\" : profile.social.twitter,\r\n      facebook: loading || !profile.social ? \"\" : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? \"\" : profile.social.linkedin,\r\n      youtube: loading || !profile.social ? \"\" : profile.social.youtube,\r\n      instagram: loading || !profile.social ? \"\" : profile.social.instagram,\r\n    });\r\n  }, [loading]);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  const handleEditProfile = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n\r\n    if (errors) {\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setSnackbarOpen(false);\r\n    removeAlert();\r\n  };\r\n\r\n  const socialInput = () => (\r\n    <>\r\n      <TextField\r\n        fullWidth\r\n        style={{ margin: 8 }}\r\n        margin='normal'\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position='start'>\r\n              <TwitterIcon style={{ color: \"#1DA1F2\" }} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        name='twitter'\r\n        value={twitter || \"\"}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        style={{ margin: 8 }}\r\n        margin='normal'\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position='start'>\r\n              <FacebookIcon style={{ color: \"#4267B2\" }} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        name='facebook'\r\n        value={facebook || \"\"}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        style={{ margin: 8 }}\r\n        margin='normal'\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position='start'>\r\n              <YouTubeIcon style={{ color: \"#FF0000\" }} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        name='youtube'\r\n        value={youtube || \"\"}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        style={{ margin: 8 }}\r\n        margin='normal'\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position='start'>\r\n              <LinkedInIcon style={{ color: \"#0077B5\" }} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        name='linkedin'\r\n        value={linkedin || \"\"}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        style={{ margin: 8 }}\r\n        margin='normal'\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position='start'>\r\n              <InstagramIcon style={{ color: \"#C13584\" }} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        name='instagram'\r\n        value={instagram || \"\"}\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n\r\n  console.log(formData);\r\n\r\n  return (\r\n    <Container maxWidth='sm'>\r\n      {errors && (\r\n        <Snackbar\r\n          open={snackbarOpen}\r\n          autoHideDuration={3000}\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\",\r\n          }}\r\n          onClose={handleSnackbarClose}\r\n        >\r\n          <Message\r\n            handleClose={handleSnackbarClose}\r\n            type={errors.length > 0 ? errors[0].type : \"error\"}\r\n            message={errors.length > 0 ? errors[0].msg : null}\r\n          />\r\n        </Snackbar>\r\n      )}\r\n      <Paper elevation={0} className={classes.paper}>\r\n        <Typography\r\n          variant='h4'\r\n          align='center'\r\n          className={classes.title}\r\n          color='primary'\r\n        >\r\n          Edit Your Profile\r\n        </Typography>\r\n        <Typography variant='h6'>\r\n          Let's get some information to make your profile stand out\r\n        </Typography>\r\n        <br />\r\n        <Typography variant='subtitle1'>* is required field</Typography>\r\n\r\n        <form\r\n          className={classes.root}\r\n          noValidate\r\n          autoComplete='off'\r\n          onSubmit={handleEditProfile}\r\n        >\r\n          <TextField\r\n            label='* Status'\r\n            select\r\n            fullWidth\r\n            style={{ margin: 8 }}\r\n            margin='normal'\r\n            name='status'\r\n            value={status || \"\"}\r\n            onChange={handleChange}\r\n            helperText='Please select your professional status'\r\n          >\r\n            <MenuItem value='Developer'>Developer</MenuItem>\r\n            <MenuItem value='Junior Developer'>Junior Developer</MenuItem>\r\n            <MenuItem value='Senior Developer'>Senior Developer</MenuItem>\r\n            <MenuItem value='Manager'>Manager</MenuItem>\r\n            <MenuItem value='Student or Learning'>Student or Learning</MenuItem>\r\n            <MenuItem value='Instructor'>Instructor</MenuItem>\r\n            <MenuItem value='Intern'>Intern</MenuItem>\r\n            <MenuItem value='Other'>Other</MenuItem>\r\n          </TextField>\r\n\r\n          <TextField\r\n            label='Company'\r\n            placeholder='ABC Company'\r\n            fullWidth\r\n            style={{ margin: 8 }}\r\n            margin='normal'\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            name='company'\r\n            value={company || \"\"}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <TextField\r\n            label='Website'\r\n            placeholder='abcCompany.com'\r\n            fullWidth\r\n            style={{ margin: 8 }}\r\n            margin='normal'\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            name='website'\r\n            value={website || \"\"}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <TextField\r\n            label='Location'\r\n            placeholder='Location'\r\n            fullWidth\r\n            style={{ margin: 8 }}\r\n            margin='normal'\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            name='location'\r\n            value={location || \"\"}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <TextField\r\n            label='* Skills'\r\n            placeholder='* Skills'\r\n            fullWidth\r\n            style={{ margin: 8 }}\r\n            margin='normal'\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            name='skills'\r\n            value={skills || \"\"}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <TextField\r\n            label='Github Username'\r\n            placeholder='Github Username'\r\n            fullWidth\r\n            style={{ margin: 8 }}\r\n            margin='normal'\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            name='githubusername'\r\n            value={githubusername || \"\"}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <TextField\r\n            label='Bio'\r\n            placeholder='A short bio of yourself'\r\n            fullWidth\r\n            rows={4}\r\n            multiline\r\n            style={{ margin: 8 }}\r\n            margin='normal'\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            name='bio'\r\n            value={bio || \"\"}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <Button\r\n            onClick={() => setSocialToggle(!socialToggle)}\r\n            variant='contained'\r\n            color='secondary'\r\n          >\r\n            Add Social Media Links\r\n          </Button>\r\n\r\n          <Collapse in={socialToggle}>{socialInput()}</Collapse>\r\n\r\n          <div className={classes.buttonGroup}>\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.submitBtn}\r\n            >\r\n              Edit Profile\r\n            </Button>\r\n            <Button\r\n              component={Link}\r\n              to='/dashboard'\r\n              variant='contained'\r\n              color='secondary'\r\n              className={classes.submitBtn}\r\n            >\r\n              Go Back\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\AddEducation.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\AddExperience.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\dashboard\\DashboardActions.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\dashboard\\Experience.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\dashboard\\Education.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":19,"column":28,"nodeType":"118","messageId":"119","endLine":19,"endColumn":40},{"ruleId":"120","severity":1,"message":"121","line":23,"column":6,"nodeType":"122","endLine":23,"endColumn":13,"suggestions":"123"},{"ruleId":"116","severity":1,"message":"124","line":39,"column":9,"nodeType":"118","messageId":"119","endLine":39,"endColumn":16},{"ruleId":"116","severity":1,"message":"125","line":1,"column":56,"nodeType":"118","messageId":"119","endLine":1,"endColumn":65},{"ruleId":"120","severity":1,"message":"126","line":43,"column":6,"nodeType":"122","endLine":43,"endColumn":8,"suggestions":"127"},{"ruleId":"116","severity":1,"message":"125","line":1,"column":56,"nodeType":"118","messageId":"119","endLine":1,"endColumn":65},{"ruleId":"116","severity":1,"message":"128","line":225,"column":17,"nodeType":"118","messageId":"119","endLine":225,"endColumn":21},{"ruleId":"120","severity":1,"message":"129","line":119,"column":6,"nodeType":"122","endLine":119,"endColumn":15,"suggestions":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'user_loading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["133"],"'history' is assigned a value but never used.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array.",["134"],"'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array.",["135"],"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [loadUser, token]",{"range":"142","text":"143"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"144","text":"145"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"146","text":"147"},[799,806],"[loadUser, token]",[1226,1228],"[getCurrentProfile]",[3349,3358],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]"]