[{"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\index.js":"1","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\App.js":"2","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\theme.js":"3","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\layout\\Navbar.js":"4","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Home.js":"5","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Login.js":"6","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Register.js":"7","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\Loading.js":"8","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\Message.js":"9","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\context\\userContext.js":"10","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\actionTypes.js":"11","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\reducers\\userReducer.js":"12","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\utils\\setAuthToken.js":"13","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Dashboard.js":"14","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\utils\\AuthRoute.js":"15","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\context\\profileContext.js":"16","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\reducers\\profileReducer.js":"17","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\CreateProfile.js":"18","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\EditProfile.js":"19","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\AddEducation.js":"20","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\AddExperience.js":"21","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\dashboard\\DashboardActions.js":"22","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\dashboard\\Experience.js":"23","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\dashboard\\Education.js":"24","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Profiles.js":"25","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\profiles\\ProfileItem.js":"26","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Profile.js":"27","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\profile\\ProfileTop.js":"28","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\profile\\ProfileAbout.js":"29","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\profile\\ProfileExperience.js":"30","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\profile\\ProfileEducation.js":"31","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\profile\\ProfileGithub.js":"32","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Posts.js":"33","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\context\\postContext.js":"34","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\reducers\\postReducer.js":"35","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\posts\\PostItem.js":"36"},{"size":808,"mtime":1610219962309,"results":"37","hashOfConfig":"38"},{"size":1754,"mtime":1610219581257,"results":"39","hashOfConfig":"38"},{"size":421,"mtime":1609821695182,"results":"40","hashOfConfig":"38"},{"size":4683,"mtime":1610219775764,"results":"41","hashOfConfig":"38"},{"size":378,"mtime":1609815679109,"results":"42","hashOfConfig":"38"},{"size":4389,"mtime":1609813123011,"results":"43","hashOfConfig":"38"},{"size":5407,"mtime":1609808989955,"results":"44","hashOfConfig":"38"},{"size":564,"mtime":1610171700043,"results":"45","hashOfConfig":"38"},{"size":364,"mtime":1609534464791,"results":"46","hashOfConfig":"38"},{"size":4233,"mtime":1610168888039,"results":"47","hashOfConfig":"38"},{"size":1110,"mtime":1610223959515,"results":"48","hashOfConfig":"38"},{"size":2461,"mtime":1610090694587,"results":"49","hashOfConfig":"38"},{"size":346,"mtime":1609739838201,"results":"50","hashOfConfig":"38"},{"size":3296,"mtime":1610162054358,"results":"51","hashOfConfig":"38"},{"size":453,"mtime":1609812988249,"results":"52","hashOfConfig":"38"},{"size":8432,"mtime":1610168832880,"results":"53","hashOfConfig":"38"},{"size":1228,"mtime":1610181441038,"results":"54","hashOfConfig":"38"},{"size":9888,"mtime":1610175991350,"results":"55","hashOfConfig":"38"},{"size":11220,"mtime":1610075377779,"results":"56","hashOfConfig":"38"},{"size":7147,"mtime":1610040203065,"results":"57","hashOfConfig":"38"},{"size":7078,"mtime":1610058767236,"results":"58","hashOfConfig":"38"},{"size":2053,"mtime":1610088147786,"results":"59","hashOfConfig":"38"},{"size":3832,"mtime":1610041420474,"results":"60","hashOfConfig":"38"},{"size":3975,"mtime":1610041602994,"results":"61","hashOfConfig":"38"},{"size":1341,"mtime":1610168670086,"results":"62","hashOfConfig":"38"},{"size":2225,"mtime":1610176893449,"results":"63","hashOfConfig":"38"},{"size":3397,"mtime":1610181649600,"results":"64","hashOfConfig":"38"},{"size":2867,"mtime":1610179263676,"results":"65","hashOfConfig":"38"},{"size":1604,"mtime":1610181735913,"results":"66","hashOfConfig":"38"},{"size":1175,"mtime":1610179484400,"results":"67","hashOfConfig":"38"},{"size":1371,"mtime":1610179494333,"results":"68","hashOfConfig":"38"},{"size":2662,"mtime":1610181583487,"results":"69","hashOfConfig":"38"},{"size":1214,"mtime":1610220794166,"results":"70","hashOfConfig":"38"},{"size":1967,"mtime":1610224355264,"results":"71","hashOfConfig":"38"},{"size":639,"mtime":1610224676472,"results":"72","hashOfConfig":"38"},{"size":3160,"mtime":1610225689979,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ipi2oe",{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\index.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\App.js",["153"],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\theme.js",[],["154","155"],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\layout\\Navbar.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Home.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Login.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Register.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\Loading.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\Message.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\context\\userContext.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\actionTypes.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\reducers\\userReducer.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\utils\\setAuthToken.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Dashboard.js",["156"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Container, Typography, Button, Snackbar } from \"@material-ui/core\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\n\r\nimport Loading from \"../components/Loading\";\r\nimport Message from \"../components/Message\";\r\nimport { useProfileContext } from \"../context/profileContext\";\r\nimport { useUserContext } from \"../context/userContext\";\r\nimport DashboardActions from \"../components/dashboard/DashboardActions\";\r\nimport Experience from \"../components/dashboard/Experience\";\r\nimport Education from \"../components/dashboard/Education\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    margin: \"2rem auto\",\r\n    textAlign: \"center\",\r\n  },\r\n  userIcon: {\r\n    marginBottom: 0,\r\n    paddingBottom: 0,\r\n  },\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n\r\n  const {\r\n    getCurrentProfile,\r\n    loading,\r\n    profile,\r\n    deleteAccount,\r\n    errors,\r\n    removeAlert,\r\n  } = useProfileContext();\r\n  const { user } = useUserContext();\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, []);\r\n\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setSnackbarOpen(false);\r\n    removeAlert();\r\n  };\r\n\r\n  return loading && profile === null ? (\r\n    <Loading />\r\n  ) : (\r\n    <>\r\n      <Container>\r\n        <Typography variant='h4' color='primary' className={classes.title}>\r\n          Dashboard\r\n        </Typography>\r\n\r\n        {errors && (\r\n          <Snackbar\r\n            open={snackbarOpen}\r\n            autoHideDuration={3000}\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"right\",\r\n            }}\r\n            onClose={handleSnackbarClose}\r\n          >\r\n            <Message\r\n              handleClose={handleSnackbarClose}\r\n              type={errors.length > 0 ? errors[0].type : \"error\"}\r\n              message={errors.length > 0 ? errors[0].msg : null}\r\n            />\r\n          </Snackbar>\r\n        )}\r\n\r\n        <Typography variant='h5'>\r\n          <PersonIcon fontSize='large' className={classes.userIcon} />\r\n          {\"  \"}\r\n          Welcome {user && user.name}\r\n        </Typography>\r\n        {profile !== null ? (\r\n          <>\r\n            <DashboardActions\r\n              deleteAccount={deleteAccount}\r\n              errors={errors}\r\n              history={history}\r\n              setSnackbarOpen={setSnackbarOpen}\r\n            />\r\n            <Experience experience={profile.experience} />\r\n            <br />\r\n            <Education education={profile.education} />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Typography variant='body1'>\r\n              You have not yet set up a profile, please add some info.\r\n            </Typography>\r\n            <Button\r\n              component={Link}\r\n              to='/create-profile'\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Create profile\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\utils\\AuthRoute.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\context\\profileContext.js",["157"],"import React, { createContext, useContext, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport reducer from \"../reducers/profileReducer\";\r\n\r\nimport {\r\n  PROFILE_GET,\r\n  PROFILES_GET,\r\n  PROFILE_UPDATE,\r\n  PROFILE_ERROR,\r\n  PROFILE_CLEAR,\r\n  GET_REPOS,\r\n  ACCOUNT_DELETED,\r\n  SET_ALERT,\r\n  REMOVE_ALERT,\r\n} from \"../actionTypes\";\r\n\r\nconst ProfileContext = createContext();\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {},\r\n  errors: [],\r\n};\r\n\r\nconst ProfileProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  //// Get current users profile\r\n  const getCurrentProfile = async () => {\r\n    try {\r\n      const { data } = await axios.get(\"/api/profile/me\");\r\n\r\n      console.log(\"data\", data);\r\n      dispatch({ type: PROFILE_GET, payload: data });\r\n    } catch (err) {\r\n      console.log(\"err\", err);\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n\r\n  //// Get all profiles\r\n  const getProfiles = async () => {\r\n    // Clear the current profile\r\n    dispatch({ type: PROFILE_CLEAR });\r\n\r\n    try {\r\n      const { data } = await axios.get(\"/api/profile\");\r\n\r\n      dispatch({ type: PROFILES_GET, payload: data });\r\n    } catch (err) {\r\n      console.log(\"err\", err);\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n\r\n  //// Get profile by ID\r\n  const getProfileById = async (userId) => {\r\n    try {\r\n      const { data } = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n      dispatch({ type: PROFILE_GET, payload: data });\r\n    } catch (err) {\r\n      console.log(\"err\", err);\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n\r\n  //// Get profile by ID\r\n  const getGithubRepos = async (username) => {\r\n    try {\r\n      const { data } = await axios.get(`/api/profile/github/${username}`);\r\n\r\n      dispatch({ type: GET_REPOS, payload: data });\r\n    } catch (err) {\r\n      console.log(\"err\", err);\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n\r\n  //// Create or update profile\r\n  const createProfile = async (formData, history, edit = false) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/profile\", formData, config);\r\n\r\n      dispatch({ type: PROFILE_GET, payload: data });\r\n\r\n      if (edit) {\r\n        dispatch({\r\n          type: SET_ALERT,\r\n          payload: { msg: \"Profile Updated\", type: \"success\" },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT,\r\n          payload: { msg: \"Profile Created\", type: \"success\" },\r\n        });\r\n      }\r\n\r\n      // Redirect if creating, stay if updating\r\n      if (!edit) {\r\n        setTimeout(() => {\r\n          history.push(\"/dashboard\");\r\n        }, 3000);\r\n      }\r\n    } catch (err) {\r\n      console.log(err.response.data);\r\n      // Show error validation from backend\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => {\r\n          dispatch({ type: SET_ALERT, payload: error });\r\n        });\r\n      }\r\n\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n\r\n  //// Add Experience\r\n  const addExperience = async (formData, history) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        \"/api/profile/experience\",\r\n        formData,\r\n        config\r\n      );\r\n\r\n      dispatch({ type: PROFILE_UPDATE, payload: data });\r\n\r\n      dispatch({\r\n        type: SET_ALERT,\r\n        payload: { msg: \"Experience Added\", type: \"success\" },\r\n      });\r\n\r\n      // Redirect\r\n      setTimeout(() => {\r\n        history.push(\"/dashboard\");\r\n      }, 6000);\r\n    } catch (err) {\r\n      console.log(err.response.data);\r\n      // Show error validation from backend\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => {\r\n          dispatch({ type: SET_ALERT, payload: error });\r\n        });\r\n      }\r\n\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n\r\n  //// Add Education\r\n  const addEducation = async (formData, history) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        \"/api/profile/education\",\r\n        formData,\r\n        config\r\n      );\r\n\r\n      dispatch({ type: PROFILE_UPDATE, payload: data });\r\n\r\n      dispatch({\r\n        type: SET_ALERT,\r\n        payload: { msg: \"Education Added\", type: \"success\" },\r\n      });\r\n\r\n      // Redirect\r\n      setTimeout(() => {\r\n        history.push(\"/dashboard\");\r\n      }, 4000);\r\n    } catch (err) {\r\n      console.log(err.response.data);\r\n      // Show error validation from backend\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => {\r\n          dispatch({ type: SET_ALERT, payload: error });\r\n        });\r\n      }\r\n\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n\r\n  //// Delete Experience\r\n  const deleteExperience = async (expId) => {\r\n    try {\r\n      const { data } = await axios.delete(`/api/profile/experience/${expId}`);\r\n\r\n      dispatch({ type: PROFILE_UPDATE, payload: data });\r\n\r\n      dispatch({\r\n        type: SET_ALERT,\r\n        payload: { msg: \"Experience Removed\", type: \"success\" },\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n\r\n  //// Delete Education\r\n  const deleteEducation = async (eduId) => {\r\n    try {\r\n      const { data } = await axios.delete(`/api/profile/education/${eduId}`);\r\n\r\n      dispatch({ type: PROFILE_UPDATE, payload: data });\r\n\r\n      dispatch({\r\n        type: SET_ALERT,\r\n        payload: { msg: \"Education Removed\", type: \"success\" },\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n\r\n  //// Delete Account and Profile\r\n  const deleteAccount = async (history) => {\r\n    if (window.confirm(\"Are you sure? This can not be undone\")) {\r\n      try {\r\n        const { data } = await axios.delete(\"/api/profile\");\r\n\r\n        dispatch({ type: PROFILE_CLEAR });\r\n\r\n        dispatch({ type: ACCOUNT_DELETED });\r\n\r\n        dispatch({\r\n          type: SET_ALERT,\r\n          payload: {\r\n            msg: \"Your account has been permanently deleted\",\r\n            type: \"error\",\r\n          },\r\n        });\r\n\r\n        // Redirect\r\n        setTimeout(() => {\r\n          history.push(\"/dashboard\");\r\n        }, 5000);\r\n      } catch (err) {\r\n        dispatch({\r\n          type: PROFILE_ERROR,\r\n          payload: {\r\n            msg: err.response.statusText,\r\n            status: err.response.status,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeAlert = () => {\r\n    console.log(\"removed\");\r\n    dispatch({ type: REMOVE_ALERT });\r\n  };\r\n\r\n  const clearProfile = () => {\r\n    dispatch({ type: PROFILE_CLEAR });\r\n  };\r\n\r\n  return (\r\n    <ProfileContext.Provider\r\n      value={{\r\n        ...state,\r\n        getCurrentProfile,\r\n        createProfile,\r\n        removeAlert,\r\n        clearProfile,\r\n        addExperience,\r\n        addEducation,\r\n        deleteExperience,\r\n        deleteEducation,\r\n        deleteAccount,\r\n        getProfiles,\r\n        getProfileById,\r\n        getGithubRepos,\r\n      }}\r\n    >\r\n      {children}\r\n    </ProfileContext.Provider>\r\n  );\r\n};\r\n\r\nconst useProfileContext = () => {\r\n  return useContext(ProfileContext);\r\n};\r\n\r\nexport { ProfileProvider, useProfileContext };\r\n","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\reducers\\profileReducer.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\CreateProfile.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\EditProfile.js",["158"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  Button,\r\n  Typography,\r\n  InputAdornment,\r\n  MenuItem,\r\n  Collapse,\r\n} from \"@material-ui/core\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\n\r\nimport { useProfileContext } from \"../context/profileContext\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: \"3rem\",\r\n    padding: \"1rem\",\r\n  },\r\n  title: {\r\n    marginTop: \"1rem\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  submitBtn: {\r\n    marginTop: \"1.5rem\",\r\n    marginBottom: \"2rem\",\r\n    marginRight: \"0.5rem\",\r\n  },\r\n  buttonGroup: {\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\nconst EditProfile = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const {\r\n    profile,\r\n    loading,\r\n    createProfile,\r\n    getCurrentProfile,\r\n    errors,\r\n    removeAlert,\r\n  } = useProfileContext();\r\n\r\n  const [socialToggle, setSocialToggle] = useState(false);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    website: \"\",\r\n    location: \"\",\r\n    status: \"\",\r\n    skills: \"\",\r\n    githubusername: \"\",\r\n    bio: \"\",\r\n    twitter: \"\",\r\n    facebook: \"\",\r\n    linkedin: \"\",\r\n    youtube: \"\",\r\n    instagram: \"\",\r\n  });\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  // Get current profile to fill the form\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    // Set the form with input\r\n    // To avoid the undefined data of the <input> with no data filled -> value={name || ''}\r\n    setFormData({\r\n      company: loading || !profile.company ? \"\" : profile.company,\r\n      website: loading || !profile.website ? \"\" : profile.website,\r\n      location: loading || !profile.location ? \"\" : profile.location,\r\n      status: loading || !profile.status ? \"\" : profile.status,\r\n      skills: loading || !profile.skills ? \"\" : profile.skills.join(\",\"),\r\n      githubusername:\r\n        loading || !profile.githubusername ? \"\" : profile.githubusername,\r\n      bio: loading || !profile.bio ? \"\" : profile.bio,\r\n      twitter: loading || !profile.social ? \"\" : profile.social.twitter,\r\n      facebook: loading || !profile.social ? \"\" : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? \"\" : profile.social.linkedin,\r\n      youtube: loading || !profile.social ? \"\" : profile.social.youtube,\r\n      instagram: loading || !profile.social ? \"\" : profile.social.instagram,\r\n    });\r\n  }, [loading]);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  const handleEditProfile = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n\r\n    if (errors) {\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setSnackbarOpen(false);\r\n    removeAlert();\r\n  };\r\n\r\n  const socialInput = () => (\r\n    <>\r\n      <TextField\r\n        fullWidth\r\n        style={{ margin: 8 }}\r\n        margin='normal'\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position='start'>\r\n              <TwitterIcon style={{ color: \"#1DA1F2\" }} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        name='twitter'\r\n        value={twitter || \"\"}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        style={{ margin: 8 }}\r\n        margin='normal'\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position='start'>\r\n              <FacebookIcon style={{ color: \"#4267B2\" }} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        name='facebook'\r\n        value={facebook || \"\"}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        style={{ margin: 8 }}\r\n        margin='normal'\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position='start'>\r\n              <YouTubeIcon style={{ color: \"#FF0000\" }} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        name='youtube'\r\n        value={youtube || \"\"}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        style={{ margin: 8 }}\r\n        margin='normal'\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position='start'>\r\n              <LinkedInIcon style={{ color: \"#0077B5\" }} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        name='linkedin'\r\n        value={linkedin || \"\"}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        style={{ margin: 8 }}\r\n        margin='normal'\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position='start'>\r\n              <InstagramIcon style={{ color: \"#C13584\" }} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        name='instagram'\r\n        value={instagram || \"\"}\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n\r\n  console.log(formData);\r\n\r\n  return (\r\n    <Container maxWidth='sm'>\r\n      {errors && (\r\n        <Snackbar\r\n          open={snackbarOpen}\r\n          autoHideDuration={3000}\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\",\r\n          }}\r\n          onClose={handleSnackbarClose}\r\n        >\r\n          <Message\r\n            handleClose={handleSnackbarClose}\r\n            type={errors.length > 0 ? errors[0].type : \"error\"}\r\n            message={errors.length > 0 ? errors[0].msg : null}\r\n          />\r\n        </Snackbar>\r\n      )}\r\n      <Paper elevation={0} className={classes.paper}>\r\n        <Typography\r\n          variant='h4'\r\n          align='center'\r\n          className={classes.title}\r\n          color='primary'\r\n        >\r\n          Edit Your Profile\r\n        </Typography>\r\n        <Typography variant='h6'>\r\n          Let's get some information to make your profile stand out\r\n        </Typography>\r\n        <br />\r\n        <Typography variant='subtitle1'>* is required field</Typography>\r\n\r\n        <form\r\n          className={classes.root}\r\n          noValidate\r\n          autoComplete='off'\r\n          onSubmit={handleEditProfile}\r\n        >\r\n          <TextField\r\n            label='* Status'\r\n            select\r\n            fullWidth\r\n            style={{ margin: 8 }}\r\n            margin='normal'\r\n            name='status'\r\n            value={status || \"\"}\r\n            onChange={handleChange}\r\n            helperText='Please select your professional status'\r\n          >\r\n            <MenuItem value='Developer'>Developer</MenuItem>\r\n            <MenuItem value='Junior Developer'>Junior Developer</MenuItem>\r\n            <MenuItem value='Senior Developer'>Senior Developer</MenuItem>\r\n            <MenuItem value='Manager'>Manager</MenuItem>\r\n            <MenuItem value='Student or Learning'>Student or Learning</MenuItem>\r\n            <MenuItem value='Instructor'>Instructor</MenuItem>\r\n            <MenuItem value='Intern'>Intern</MenuItem>\r\n            <MenuItem value='Other'>Other</MenuItem>\r\n          </TextField>\r\n\r\n          <TextField\r\n            label='Company'\r\n            placeholder='ABC Company'\r\n            fullWidth\r\n            style={{ margin: 8 }}\r\n            margin='normal'\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            name='company'\r\n            value={company || \"\"}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <TextField\r\n            label='Website'\r\n            placeholder='abcCompany.com'\r\n            fullWidth\r\n            style={{ margin: 8 }}\r\n            margin='normal'\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            name='website'\r\n            value={website || \"\"}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <TextField\r\n            label='Location'\r\n            placeholder='Location'\r\n            fullWidth\r\n            style={{ margin: 8 }}\r\n            margin='normal'\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            name='location'\r\n            value={location || \"\"}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <TextField\r\n            label='* Skills'\r\n            placeholder='* Skills'\r\n            fullWidth\r\n            style={{ margin: 8 }}\r\n            margin='normal'\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            name='skills'\r\n            value={skills || \"\"}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <TextField\r\n            label='Github Username'\r\n            placeholder='Github Username'\r\n            fullWidth\r\n            style={{ margin: 8 }}\r\n            margin='normal'\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            name='githubusername'\r\n            value={githubusername || \"\"}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <TextField\r\n            label='Bio'\r\n            placeholder='A short bio of yourself'\r\n            fullWidth\r\n            rows={4}\r\n            multiline\r\n            style={{ margin: 8 }}\r\n            margin='normal'\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            name='bio'\r\n            value={bio || \"\"}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <Button\r\n            onClick={() => setSocialToggle(!socialToggle)}\r\n            variant='contained'\r\n            color='secondary'\r\n          >\r\n            Add Social Media Links\r\n          </Button>\r\n\r\n          <Collapse in={socialToggle}>{socialInput()}</Collapse>\r\n\r\n          <div className={classes.buttonGroup}>\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.submitBtn}\r\n            >\r\n              Edit Profile\r\n            </Button>\r\n            <Button\r\n              component={Link}\r\n              to='/dashboard'\r\n              variant='contained'\r\n              color='secondary'\r\n              className={classes.submitBtn}\r\n            >\r\n              Go Back\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\AddEducation.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\AddExperience.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\dashboard\\DashboardActions.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\dashboard\\Experience.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\dashboard\\Education.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Profiles.js",["159"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Typography, Container } from \"@material-ui/core\";\r\n\r\nimport { useProfileContext } from \"../context/profileContext\";\r\nimport Loading from \"../components/Loading\";\r\nimport ProfileItem from \"../components/profiles/ProfileItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: \"2rem\",\r\n  },\r\n}));\r\n\r\nconst Profiles = () => {\r\n  const classes = useStyles();\r\n\r\n  const { profiles, getProfiles, loading } = useProfileContext();\r\n\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, []);\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          <Typography variant='h3' color='secondary' align='center'>\r\n            Developers\r\n          </Typography>\r\n          <Typography variant='h5'>\r\n            Browse and connect with developers\r\n          </Typography>\r\n          <div>\r\n            {profiles.length > 0 ? (\r\n              profiles.map((profile) => (\r\n                <ProfileItem key={profile._id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <Typography variant='h5'>No Profile Found</Typography>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profiles;\r\n","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\profiles\\ProfileItem.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Profile.js",["160"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles, Paper } from \"@material-ui/core\";\r\nimport { Typography, Container, Button, Grid } from \"@material-ui/core\";\r\n\r\nimport { useProfileContext } from \"../context/profileContext\";\r\nimport Loading from \"../components/Loading\";\r\nimport ProfileTop from \"../components/profile/ProfileTop\";\r\nimport ProfileAbout from \"../components/profile/ProfileAbout\";\r\nimport ProfileExperience from \"../components/profile/ProfileExperience\";\r\nimport ProfileEducation from \"../components/profile/ProfileEducation\";\r\nimport ProfileGithub from \"../components/profile/ProfileGithub\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: \"2rem\",\r\n    marginBottom: \"2rem\",\r\n  },\r\n  paper: {\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n  },\r\n}));\r\n\r\nconst Profile = ({ match }) => {\r\n  const classes = useStyles();\r\n\r\n  const { profile, getProfileById, loading } = useProfileContext();\r\n\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, []);\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      {profile === null || loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          <Button\r\n            component={Link}\r\n            to='/profiles'\r\n            variant='contained'\r\n            color='primary'\r\n          >\r\n            Back To Profiles\r\n          </Button>\r\n\r\n          <ProfileTop profile={profile} />\r\n          <ProfileAbout profile={profile} />\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={6}>\r\n              <Paper className={classes.paper}>\r\n                <Typography variant='h3' color='primary' align='center'>\r\n                  Experience\r\n                </Typography>\r\n                {profile.experience.length > 0 ? (\r\n                  <>\r\n                    {profile.experience.map((exp, index) => (\r\n                      <ProfileExperience experience={exp} key={index} />\r\n                    ))}\r\n                  </>\r\n                ) : (\r\n                  <Typography\r\n                    variant='h6'\r\n                    align='center'\r\n                    style={{ marginTop: \"1rem\" }}\r\n                  >\r\n                    No experience credentials\r\n                  </Typography>\r\n                )}\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Paper className={classes.paper}>\r\n                <Typography variant='h3' color='primary' align='center'>\r\n                  Education\r\n                </Typography>\r\n                {profile.education.length > 0 ? (\r\n                  <>\r\n                    {profile.education.map((edu, index) => (\r\n                      <ProfileEducation education={edu} key={index} />\r\n                    ))}\r\n                  </>\r\n                ) : (\r\n                  <Typography\r\n                    variant='h6'\r\n                    align='center'\r\n                    style={{ marginTop: \"1rem\" }}\r\n                  >\r\n                    No education credentials\r\n                  </Typography>\r\n                )}\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {profile.githubusername && (\r\n            <ProfileGithub username={profile.githubusername} />\r\n          )}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\profile\\ProfileTop.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\profile\\ProfileAbout.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\profile\\ProfileExperience.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\profile\\ProfileEducation.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\profile\\ProfileGithub.js",["161"],"import React, { useEffect } from \"react\";\r\nimport { Link, makeStyles } from \"@material-ui/core\";\r\nimport { Typography, Paper } from \"@material-ui/core\";\r\n\r\nimport { useProfileContext } from \"../../context/profileContext\";\r\nimport Loading from \"../Loading\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem\",\r\n  },\r\n  repoTop: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    border: \"1px solid black\",\r\n    marginTop: \"0.7rem\",\r\n    marginBottom: \"0.7rem\",\r\n    padding: \"0.5rem\",\r\n  },\r\n  star: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: \"white\",\r\n    padding: \"0.3rem\",\r\n    marginBottom: \"0.4rem\",\r\n  },\r\n  watcher: {\r\n    backgroundColor: \"#bdbdbd\",\r\n    color: \"white\",\r\n    padding: \"0.3rem\",\r\n    marginBottom: \"0.4rem\",\r\n  },\r\n  fork: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    color: \"white\",\r\n    padding: \"0.3rem\",\r\n    marginBottom: \"0.4rem\",\r\n  },\r\n}));\r\n\r\nconst ProfileGithub = ({ username }) => {\r\n  const classes = useStyles();\r\n\r\n  const { getGithubRepos, repos } = useProfileContext();\r\n\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, []);\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Typography\r\n        variant='h3'\r\n        align='center'\r\n        color='primary'\r\n        style={{ marginBottom: \"1rem\" }}\r\n      >\r\n        Github Reporatories\r\n      </Typography>\r\n\r\n      {repos === null ? (\r\n        <Loading />\r\n      ) : (\r\n        repos.map((repo, index) => (\r\n          <div className={classes.repoTop} key={index}>\r\n            <div>\r\n              <Typography variant='h5'>\r\n                <Link\r\n                  href={repo.html_url}\r\n                  target='_blank'\r\n                  rel='noreferrer'\r\n                  color='secondary'\r\n                >\r\n                  {repo.name}\r\n                </Link>\r\n              </Typography>\r\n              <Typography variant='body1'>{repo.description}</Typography>\r\n            </div>\r\n            <div className={classes.repoRight}>\r\n              <Typography variant='body2' className={classes.star}>\r\n                <strong>Stars:</strong> {repo.stargazers_count}\r\n              </Typography>\r\n              <Typography variant='body2' className={classes.watcher}>\r\n                <strong>Watchers:</strong> {repo.watchers_count}\r\n              </Typography>\r\n              <Typography variant='body2' className={classes.fork}>\r\n                <strong>Forks:</strong> {repo.forks_count}\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ProfileGithub;\r\n","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Posts.js",["162","163","164","165","166"],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\context\\postContext.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\reducers\\postReducer.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\posts\\PostItem.js",["167","168","169","170"],{"ruleId":"171","severity":1,"message":"172","line":26,"column":6,"nodeType":"173","endLine":26,"endColumn":13,"suggestions":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"171","severity":1,"message":"179","line":43,"column":6,"nodeType":"173","endLine":43,"endColumn":8,"suggestions":"180"},{"ruleId":"181","severity":1,"message":"182","line":275,"column":17,"nodeType":"183","messageId":"184","endLine":275,"endColumn":21},{"ruleId":"171","severity":1,"message":"185","line":119,"column":6,"nodeType":"173","endLine":119,"endColumn":15,"suggestions":"186"},{"ruleId":"171","severity":1,"message":"187","line":22,"column":6,"nodeType":"173","endLine":22,"endColumn":8,"suggestions":"188"},{"ruleId":"171","severity":1,"message":"189","line":32,"column":6,"nodeType":"173","endLine":32,"endColumn":8,"suggestions":"190"},{"ruleId":"171","severity":1,"message":"191","line":48,"column":6,"nodeType":"173","endLine":48,"endColumn":8,"suggestions":"192"},{"ruleId":"181","severity":1,"message":"193","line":2,"column":10,"nodeType":"183","messageId":"184","endLine":2,"endColumn":14},{"ruleId":"181","severity":1,"message":"194","line":4,"column":33,"nodeType":"183","messageId":"184","endLine":4,"endColumn":39},{"ruleId":"181","severity":1,"message":"195","line":4,"column":41,"nodeType":"183","messageId":"184","endLine":4,"endColumn":45},{"ruleId":"181","severity":1,"message":"196","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":14},{"ruleId":"171","severity":1,"message":"197","line":26,"column":6,"nodeType":"173","endLine":26,"endColumn":8,"suggestions":"198"},{"ruleId":"181","severity":1,"message":"199","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":26},{"ruleId":"181","severity":1,"message":"200","line":3,"column":22,"nodeType":"183","messageId":"184","endLine":3,"endColumn":27},{"ruleId":"181","severity":1,"message":"194","line":9,"column":3,"nodeType":"183","messageId":"184","endLine":9,"endColumn":9},{"ruleId":"181","severity":1,"message":"201","line":50,"column":36,"nodeType":"183","messageId":"184","endLine":50,"endColumn":40},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["202"],"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array.",["205"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array.",["206"],"React Hook useEffect has a missing dependency: 'getProfiles'. Either include it or remove the dependency array.",["207"],"React Hook useEffect has missing dependencies: 'getProfileById' and 'match.params.id'. Either include them or remove the dependency array.",["208"],"React Hook useEffect has missing dependencies: 'getGithubRepos' and 'username'. Either include them or remove the dependency array.",["209"],"'Link' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'Moment' is defined but never used.","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.",["210"],"'useEffect' is defined but never used.","'Paper' is defined but never used.","'user' is assigned a value but never used.",{"desc":"211","fix":"212"},"no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},"Update the dependencies array to be: [loadUser, token]",{"range":"225","text":"226"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"227","text":"228"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"229","text":"230"},"Update the dependencies array to be: [getProfiles]",{"range":"231","text":"232"},"Update the dependencies array to be: [getProfileById, match.params.id]",{"range":"233","text":"234"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"235","text":"236"},"Update the dependencies array to be: [getPosts]",{"range":"237","text":"238"},[900,907],"[loadUser, token]",[1226,1228],"[getCurrentProfile]",[3349,3358],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",[597,599],"[getProfiles]",[1052,1054],"[getProfileById, match.params.id]",[1171,1173],"[getGithubRepos, username]",[716,718],"[getPosts]"]