[{"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\index.js":"1","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\App.js":"2","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\theme.js":"3","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\layout\\Navbar.js":"4","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Home.js":"5","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Login.js":"6","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Register.js":"7","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\Loading.js":"8","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\Message.js":"9","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\context\\userContext.js":"10","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\actionTypes.js":"11","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\reducers\\userReducer.js":"12","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\utils\\setAuthToken.js":"13","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Dashboard.js":"14","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\utils\\AuthRoute.js":"15","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\context\\profileContext.js":"16","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\reducers\\profileReducer.js":"17","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\CreateProfile.js":"18","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\EditProfile.js":"19","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\AddEducation.js":"20","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\AddExperience.js":"21","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\dashboard\\DashboardActions.js":"22","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\dashboard\\Experience.js":"23","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\dashboard\\Education.js":"24"},{"size":701,"mtime":1609990422460,"results":"25","hashOfConfig":"26"},{"size":1520,"mtime":1609998608089,"results":"27","hashOfConfig":"26"},{"size":421,"mtime":1609821695182,"results":"28","hashOfConfig":"26"},{"size":4362,"mtime":1609815286225,"results":"29","hashOfConfig":"26"},{"size":378,"mtime":1609815679109,"results":"30","hashOfConfig":"26"},{"size":4389,"mtime":1609813123011,"results":"31","hashOfConfig":"26"},{"size":5407,"mtime":1609808989955,"results":"32","hashOfConfig":"26"},{"size":506,"mtime":1609816465272,"results":"33","hashOfConfig":"26"},{"size":364,"mtime":1609534464791,"results":"34","hashOfConfig":"26"},{"size":4201,"mtime":1609985529274,"results":"35","hashOfConfig":"26"},{"size":824,"mtime":1609988126952,"results":"36","hashOfConfig":"26"},{"size":2461,"mtime":1609809640204,"results":"37","hashOfConfig":"26"},{"size":346,"mtime":1609739838201,"results":"38","hashOfConfig":"26"},{"size":2155,"mtime":1610040114009,"results":"39","hashOfConfig":"26"},{"size":453,"mtime":1609812988249,"results":"40","hashOfConfig":"26"},{"size":5007,"mtime":1610040318501,"results":"41","hashOfConfig":"26"},{"size":888,"mtime":1609988743483,"results":"42","hashOfConfig":"26"},{"size":9916,"mtime":1609989959254,"results":"43","hashOfConfig":"26"},{"size":11278,"mtime":1609982772295,"results":"44","hashOfConfig":"26"},{"size":7147,"mtime":1610040203065,"results":"45","hashOfConfig":"26"},{"size":7113,"mtime":1610039209567,"results":"46","hashOfConfig":"26"},{"size":1234,"mtime":1609998412127,"results":"47","hashOfConfig":"26"},{"size":2661,"mtime":1610000362918,"results":"48","hashOfConfig":"26"},{"size":2806,"mtime":1610040078189,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ipi2oe",{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"59"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\index.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\App.js",["101","102"],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\theme.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\layout\\Navbar.js",["103","104"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n\r\nimport { useUserContext } from \"../../context/userContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  titleLink: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n}));\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n  const { user_loading, isAuthenticated, logout } = useUserContext();\r\n\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n\r\n  const sidebar = () => {\r\n    return (\r\n      <div\r\n        className={classes.list}\r\n        role='presentation'\r\n        onClick={toggleDrawer(false)}\r\n        onKeyDown={toggleDrawer(false)}\r\n      >\r\n        {!user_loading && (\r\n          <>{isAuthenticated ? authLinksSide() : guestLinksSide()}</>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const toggleDrawer = (value) => (e) => {\r\n    if (e && e.type === \"keydown\" && (e.key === \"Tab\" || e.key === \"Shift\")) {\r\n      return;\r\n    }\r\n    setSidebarOpen(value);\r\n  };\r\n\r\n  // Navbar\r\n  const authLinksNav = () => (\r\n    <>\r\n      <Button component={Link} to='/dashboard' color='inherit'>\r\n        Dashboard\r\n      </Button>\r\n      <Button onClick={logout} color='inherit'>\r\n        Logout\r\n      </Button>\r\n    </>\r\n  );\r\n  const guestLinksNav = () => (\r\n    <>\r\n      <Button component={Link} to='/developers' color='inherit'>\r\n        Developers\r\n      </Button>\r\n      <Button component={Link} to='/login' color='inherit'>\r\n        Login\r\n      </Button>\r\n      <Button component={Link} to='/register' color='inherit'>\r\n        Regsiter\r\n      </Button>\r\n    </>\r\n  );\r\n\r\n  // Sidebar\r\n  const authLinksSide = () => (\r\n    <List>\r\n      <ListItem button component={Link} to='/dashboard'>\r\n        <ListItemText>Dashboard</ListItemText>\r\n      </ListItem>\r\n      <ListItem button onClick={logout}>\r\n        <ListItemText>Logout</ListItemText>\r\n      </ListItem>\r\n    </List>\r\n  );\r\n  const guestLinksSide = () => (\r\n    <List>\r\n      <ListItem button component={Link} to='/events'>\r\n        <ListItemText>All Events</ListItemText>\r\n      </ListItem>\r\n      <ListItem button component={Link} to='/login'>\r\n        <ListItemText>Login</ListItemText>\r\n      </ListItem>\r\n      <ListItem button component={Link} to='/register'>\r\n        <ListItemText>Register</ListItemText>\r\n      </ListItem>\r\n    </List>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static'>\r\n        <Toolbar>\r\n          <Hidden mdUp>\r\n            <IconButton\r\n              edge='start'\r\n              className={classes.menuButton}\r\n              color='inherit'\r\n              aria-label='menu'\r\n              onClick={toggleDrawer(true)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          </Hidden>\r\n          <SwipeableDrawer\r\n            anchor='left'\r\n            open={sidebarOpen}\r\n            onClose={toggleDrawer(false)}\r\n            onOpen={toggleDrawer(true)}\r\n          >\r\n            {sidebar()}\r\n          </SwipeableDrawer>\r\n          <Typography variant='h6' className={classes.title}>\r\n            <Link to='/' className={classes.titleLink}>\r\n              EventBooking\r\n            </Link>\r\n          </Typography>\r\n          <Hidden smDown>\r\n            {!user_loading && (\r\n              <>{isAuthenticated ? authLinksNav() : guestLinksNav()}</>\r\n            )}\r\n          </Hidden>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n",["105","106"],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Home.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Login.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Register.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\Loading.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\Message.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\context\\userContext.js",["107"],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\actionTypes.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\reducers\\userReducer.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\utils\\setAuthToken.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\Dashboard.js",["108"],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\utils\\AuthRoute.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\context\\profileContext.js",["109"],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\reducers\\profileReducer.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\CreateProfile.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\EditProfile.js",["110","111"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  Button,\r\n  Typography,\r\n  InputAdornment,\r\n  MenuItem,\r\n  Collapse,\r\n} from \"@material-ui/core\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\n\r\nimport { useProfileContext } from \"../context/profileContext\";\r\nimport { useUserContext } from \"../context/userContext\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: \"3rem\",\r\n    padding: \"1rem\",\r\n  },\r\n  title: {\r\n    marginTop: \"1rem\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  submitBtn: {\r\n    marginTop: \"1.5rem\",\r\n    marginBottom: \"2rem\",\r\n    marginRight: \"0.5rem\",\r\n  },\r\n  buttonGroup: {\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\nconst EditProfile = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const {\r\n    profile,\r\n    loading,\r\n    createProfile,\r\n    getCurrentProfile,\r\n    errors,\r\n    removeAlert,\r\n  } = useProfileContext();\r\n\r\n  const [socialToggle, setSocialToggle] = useState(false);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    website: \"\",\r\n    location: \"\",\r\n    status: \"\",\r\n    skills: \"\",\r\n    githubusername: \"\",\r\n    bio: \"\",\r\n    twitter: \"\",\r\n    facebook: \"\",\r\n    linkedin: \"\",\r\n    youtube: \"\",\r\n    instagram: \"\",\r\n  });\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  // Get current profile to fill the form\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    // Set the form with input\r\n    // To avoid the undefined data of the <input> with no data filled -> value={name || ''}\r\n    setFormData({\r\n      company: loading || !profile.company ? \"\" : profile.company,\r\n      website: loading || !profile.website ? \"\" : profile.website,\r\n      location: loading || !profile.location ? \"\" : profile.location,\r\n      status: loading || !profile.status ? \"\" : profile.status,\r\n      skills: loading || !profile.skills ? \"\" : profile.skills.join(\",\"),\r\n      githubusername:\r\n        loading || !profile.githubusername ? \"\" : profile.githubusername,\r\n      bio: loading || !profile.bio ? \"\" : profile.bio,\r\n      twitter: loading || !profile.social ? \"\" : profile.social.twitter,\r\n      facebook: loading || !profile.social ? \"\" : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? \"\" : profile.social.linkedin,\r\n      youtube: loading || !profile.social ? \"\" : profile.social.youtube,\r\n      instagram: loading || !profile.social ? \"\" : profile.social.instagram,\r\n    });\r\n  }, [loading]);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  const handleEditProfile = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n\r\n    if (errors) {\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setSnackbarOpen(false);\r\n    removeAlert();\r\n  };\r\n\r\n  const socialInput = () => (\r\n    <>\r\n      <TextField\r\n        fullWidth\r\n        style={{ margin: 8 }}\r\n        margin='normal'\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position='start'>\r\n              <TwitterIcon style={{ color: \"#1DA1F2\" }} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        name='twitter'\r\n        value={twitter || \"\"}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        style={{ margin: 8 }}\r\n        margin='normal'\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position='start'>\r\n              <FacebookIcon style={{ color: \"#4267B2\" }} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        name='facebook'\r\n        value={facebook || \"\"}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        style={{ margin: 8 }}\r\n        margin='normal'\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position='start'>\r\n              <YouTubeIcon style={{ color: \"#FF0000\" }} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        name='youtube'\r\n        value={youtube || \"\"}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        style={{ margin: 8 }}\r\n        margin='normal'\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position='start'>\r\n              <LinkedInIcon style={{ color: \"#0077B5\" }} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        name='linkedin'\r\n        value={linkedin || \"\"}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        style={{ margin: 8 }}\r\n        margin='normal'\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position='start'>\r\n              <InstagramIcon style={{ color: \"#C13584\" }} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        name='instagram'\r\n        value={instagram || \"\"}\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n\r\n  console.log(formData);\r\n\r\n  return (\r\n    <Container maxWidth='sm'>\r\n      {errors && (\r\n        <Snackbar\r\n          open={snackbarOpen}\r\n          autoHideDuration={3000}\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\",\r\n          }}\r\n          onClose={handleSnackbarClose}\r\n        >\r\n          <Message\r\n            handleClose={handleSnackbarClose}\r\n            type={errors.length > 0 ? errors[0].type : \"error\"}\r\n            message={errors.length > 0 ? errors[0].msg : null}\r\n          />\r\n        </Snackbar>\r\n      )}\r\n      <Paper elevation={0} className={classes.paper}>\r\n        <Typography\r\n          variant='h4'\r\n          align='center'\r\n          className={classes.title}\r\n          color='primary'\r\n        >\r\n          Edit Your Profile\r\n        </Typography>\r\n        <Typography variant='h6'>\r\n          Let's get some information to make your profile stand out\r\n        </Typography>\r\n        <br />\r\n        <Typography variant='subtitle1'>* is required field</Typography>\r\n\r\n        <form\r\n          className={classes.root}\r\n          noValidate\r\n          autoComplete='off'\r\n          onSubmit={handleEditProfile}\r\n        >\r\n          <TextField\r\n            label='* Status'\r\n            select\r\n            fullWidth\r\n            style={{ margin: 8 }}\r\n            margin='normal'\r\n            name='status'\r\n            value={status || \"\"}\r\n            onChange={handleChange}\r\n            helperText='Please select your professional status'\r\n          >\r\n            <MenuItem value='Developer'>Developer</MenuItem>\r\n            <MenuItem value='Junior Developer'>Junior Developer</MenuItem>\r\n            <MenuItem value='Senior Developer'>Senior Developer</MenuItem>\r\n            <MenuItem value='Manager'>Manager</MenuItem>\r\n            <MenuItem value='Student or Learning'>Student or Learning</MenuItem>\r\n            <MenuItem value='Instructor'>Instructor</MenuItem>\r\n            <MenuItem value='Intern'>Intern</MenuItem>\r\n            <MenuItem value='Other'>Other</MenuItem>\r\n          </TextField>\r\n\r\n          <TextField\r\n            label='Company'\r\n            placeholder='ABC Company'\r\n            fullWidth\r\n            style={{ margin: 8 }}\r\n            margin='normal'\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            name='company'\r\n            value={company || \"\"}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <TextField\r\n            label='Website'\r\n            placeholder='abcCompany.com'\r\n            fullWidth\r\n            style={{ margin: 8 }}\r\n            margin='normal'\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            name='website'\r\n            value={website || \"\"}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <TextField\r\n            label='Location'\r\n            placeholder='Location'\r\n            fullWidth\r\n            style={{ margin: 8 }}\r\n            margin='normal'\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            name='location'\r\n            value={location || \"\"}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <TextField\r\n            label='* Skills'\r\n            placeholder='* Skills'\r\n            fullWidth\r\n            style={{ margin: 8 }}\r\n            margin='normal'\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            name='skills'\r\n            value={skills || \"\"}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <TextField\r\n            label='Github Username'\r\n            placeholder='Github Username'\r\n            fullWidth\r\n            style={{ margin: 8 }}\r\n            margin='normal'\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            name='githubusername'\r\n            value={githubusername || \"\"}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <TextField\r\n            label='Bio'\r\n            placeholder='A short bio of yourself'\r\n            fullWidth\r\n            rows={4}\r\n            multiline\r\n            style={{ margin: 8 }}\r\n            margin='normal'\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            name='bio'\r\n            value={bio || \"\"}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <Button\r\n            onClick={() => setSocialToggle(!socialToggle)}\r\n            variant='contained'\r\n            color='secondary'\r\n          >\r\n            Add Social Media Links\r\n          </Button>\r\n\r\n          <Collapse in={socialToggle}>{socialInput()}</Collapse>\r\n\r\n          <div className={classes.buttonGroup}>\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.submitBtn}\r\n            >\r\n              Edit Profile\r\n            </Button>\r\n            <Button\r\n              component={Link}\r\n              to='/dashboard'\r\n              variant='contained'\r\n              color='secondary'\r\n              className={classes.submitBtn}\r\n            >\r\n              Go Back\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\AddEducation.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\pages\\AddExperience.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\dashboard\\DashboardActions.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\dashboard\\Experience.js",[],"D:\\Developer 2021\\Traversy Media\\Udemy\\dev_connector_mern\\client\\src\\components\\dashboard\\Education.js",[],{"ruleId":"112","severity":1,"message":"113","line":6,"column":8,"nodeType":"114","messageId":"115","endLine":6,"endColumn":20},{"ruleId":"116","severity":1,"message":"117","line":24,"column":6,"nodeType":"118","endLine":24,"endColumn":13,"suggestions":"119"},{"ruleId":"112","severity":1,"message":"120","line":12,"column":8,"nodeType":"114","messageId":"115","endLine":12,"endColumn":20},{"ruleId":"112","severity":1,"message":"121","line":14,"column":8,"nodeType":"114","messageId":"115","endLine":14,"endColumn":17},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"112","severity":1,"message":"126","line":1,"column":56,"nodeType":"114","messageId":"115","endLine":1,"endColumn":65},{"ruleId":"116","severity":1,"message":"127","line":33,"column":6,"nodeType":"118","endLine":33,"endColumn":8,"suggestions":"128"},{"ruleId":"112","severity":1,"message":"126","line":1,"column":56,"nodeType":"114","messageId":"115","endLine":1,"endColumn":65},{"ruleId":"112","severity":1,"message":"129","line":22,"column":10,"nodeType":"114","messageId":"115","endLine":22,"endColumn":24},{"ruleId":"116","severity":1,"message":"130","line":120,"column":6,"nodeType":"118","endLine":120,"endColumn":15,"suggestions":"131"},"no-unused-vars","'setAuthToken' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["132"],"'ListItemIcon' is defined but never used.","'InboxIcon' is defined but never used.","no-native-reassign",["133"],"no-negated-in-lhs",["134"],"'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array.",["135"],"'useUserContext' is defined but never used.","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array.",["136"],{"desc":"137","fix":"138"},"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [loadUser, token]",{"range":"143","text":"144"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"145","text":"146"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"147","text":"148"},[834,841],"[loadUser, token]",[1043,1045],"[getCurrentProfile]",[3407,3416],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]"]